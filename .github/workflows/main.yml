name: Deploy Java project to Azure Function App

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - '**'

env:
  POM_XML_DIRECTORY: '.'                     # set this to the directory which contains pom.xml file
  JAVA_VERSION: '11'                      # set this to the dotnet version to use
  DOCKER_REGISTRY: rifrog.jfrog.io
  DOCKER_IMAGE: repokey/imagename             #check  :tag
  DOCKER_USERNAME_REF: rishabh.gupta@zopsmart.com
  DOCKER_SAAS_PASSWORD_REF: cmVmdGtuOjAxOjE3MTg3MDEyNjY6ZWk3REJrQ1NFT0lUQWF3dE1tNloyZXdLdEps #dckr_pat_LKGGPlHGDXH20WgyhA65wA9NXGg  #AKCp8oho7SvxvY2D7E6ZDQ4Nephv7wyhgYqcvVMF62ZNg2cRiLTctynBY5m3rTZDwbsBuXzzD
  AZURE_FUNCTIONAPP_NAME : az-function22-7
  DEV_RG : az-function22-7_group

jobs:
  build:
    name: maven-test
    runs-on: ubuntu-latest   # "tsa"
    defaults:
      run:
        working-directory: '.'
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2.3.4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Java Sdk ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "adopt"

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Build with Maven
        run: mvn -U -B clean verify

      - name: Upload artifact for deployment job
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: function-app
          path: "${{ github.workspace }}/target/*.jar"

      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: function-app

      - name: 'list files'
        shell: bash
        run: |
           ls 
           echo first
           cd target
           ls 

      - name: üß± Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
          
      - name: Login to my Artifactory Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME_REF }}
          password: ${{ env.DOCKER_SAAS_PASSWORD_REF }}


      - name: setting docker version
        id: github
        run: |
          IFS=-
          set -- `git describe --long --tags --dirty --always`
          version=`basename $1``date '+%s'`
          echo "Version:$version"
          echo  "::set-output name=tag_version::$version"
      - name: print tag versions
        run: echo "tag-version:${{ steps.github.outputs.tag_version }}"

      - name: üê≥ Docker build & push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
             ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ steps.github.outputs.tag_version }}
      - name: Login via Azure CLI
        uses: Azure/login@v1
        with:
          creds: '{"appId": "1ba1fe1e-d2eb-4232-bfb1-601b626ee926","displayName": "azure-cli-2023-06-19-10-06-05","password": "h6M8Q~aYJ9iIdGgekhaN.3nTx_vAQO2jMmryeaJJ","tenant": "3a3d8f93-8fe2-4192-a017-5a58b3b03565"}'
          
      - name: Setup Private Registry in Azure
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az functionapp config appsettings set \
            --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
            --resource-group ${{env.DEV_RG}} \
            --settings DOCKER_REGISTRY_SERVER_URL=${{ env.DOCKER_REGISTRY }} \
              DOCKER_REGISTRY_SERVER_USERNAME=${{ secrets.ARTIFACTORY_USER }} \
              DOCKER_REGISTRY_SERVER_PASSWORD=${{ secrets.ARTIFACTORY_SAAS_API_KEY }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-container-action@v1.0.2
        id: deploy-to-functionApp
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          image: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
      - name: üê≥ Docker logout
        if: always()
        run: docker logout ${{ env.DOCKER_REGISTRY }}
