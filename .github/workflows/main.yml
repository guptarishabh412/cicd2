name: Java

on:
  pull_request:
    branches:
      - main
      - rocket-development

  push:
    branches:
      - main
      - rocket-development

env:
  POM_XML_DIRECTORY: '.'                     # set this to the directory which contains pom.xml file
  JAVA_VERSION: '11'                      # set this to the dotnet version to use
  DOCKER_REGISTRY: rifrog.jfrog.io
  DOCKER_IMAGE: repokey/imagename             #check  :tag
  DOCKER_USERNAME_REF: rishabh.gupta@zopsmart.com
  DOCKER_SAAS_PASSWORD_REF: cmVmdGtuOjAxOjE3MTg3MDEyNjY6ZWk3REJrQ1NFT0lUQWF3dE1tNloyZXdLdEps #dckr_pat_LKGGPlHGDXH20WgyhA65wA9NXGg  #AKCp8oho7SvxvY2D7E6ZDQ4Nephv7wyhgYqcvVMF62ZNg2cRiLTctynBY5m3rTZDwbsBuXzzD
  AZURE_FUNCTIONAPP_NAME : az-function22-7
  DEV_RG : az-function22-7_group

defaults:
  run:
    working-directory: .

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2.3.4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Java Sdk ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "adopt"

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Build with Maven
        run: mvn -U -B clean verify

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build artifact
          path: target

  dockerize:
    runs-on: ubuntu-latest
    name: Dockerize
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build artifact
          path: target

      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME_REF }}
          password: ${{ env.DOCKER_SAAS_PASSWORD_REF }}

      # - name: Login to my Artifactory Docker Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ env.DOCKER_REGISTRY }}
      #     username: ${{ env.DOCKER_USERNAME_REF }}
      #     password: ${{ env.DOCKER_SAAS_PASSWORD_REF }}

      # - name: Build and Push Image
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     context: .
          # tags: gcr.io/zs-products/${{ env.app_name }}:${{ github.sha }}


      - name: üê≥ Docker build & push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:867558656
